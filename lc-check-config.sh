#!/bin/bash

function check_value(){
	if [ -z "$3" ] || [ ! -z "${3##[0-9]*}" ] || [ ! -z ${3##0x[0-f]*} ]; then
		local val="\"$3\""
	else
		local val="$3"
	fi
	grep "^CONFIG_$2=$val$" "$1" > /dev/null
}
function check_value_start(){
	:
	#TODO:
	#* CONFIG_IDENT_STRING  Libre Computer AML-S905X-CC-V2
}
function check_yes(){
	grep "^CONFIG_$2=y\$" "$1" > /dev/null
}
function check_no(){
	grep "^# CONFIG_$2 is not set$" "$1" > /dev/null
}

yes=(
	ARM64_CRC32
	SYS_ARCH_TIMER
	ARM_SMCCC #PSCI
	ARM64_SUPPORT_AARCH32
	PSCI_RESET
	ARMV8_UDELAY_EVENT_STREAM
	ARMV8_CE_SHA1
	ARMV8_CE_SHA256
	SYS_MALLOC_CLEAR_ON_INIT
	CC_OPTIMIZE_FOR_SIZE
	LTO
	EFI_LOADER
	EFI_BINARY_EXEC
	EFI_VARIABLE_FILE_STORE
	#CONFIG_EFI_RT_VOLATILE_STORE in the future
	EFI_RUNTIME_UPDATE_CAPSULE
	EFI_CAPSULE_ON_DISK
	#CONFIG_EFI_CAPSULE_NAMESPACE_GUID dynamic generation
	EFI_CAPSULE_FIRMWARE_MANAGEMENT
	EFI_CAPSULE_FIRMWARE_RAW
	EFI_RNG_PROTOCOL
	EFI_LOAD_FILE2_INITRD
	#EFI_IP4_CONFIG2_PROTOCOL
	#CONFIG_EFI_HTTP_PROTOCOL
	EFI_ESRT
	EFI_ECPT
	EFI_EBBR_2_1_CONFORMANCE
	EFI_SCROLL_ON_CLEAR_SCREEN
	EFI_BOOTMGR
	EFI_HTTP_BOOT
	BOOTSTD_FULL
	BOOTSTD_DEFAULTS
	BOOTSTD_BOOTCOMMAND
	BOOTMETH_EXTLINUX
	BOOTMETH_EXTLINUX_PXE
	BOOTMETH_EFILOADER
	BOOTMETH_EFI_BOOTMGR
	BOOTMETH_SCRIPT
	LEGACY_IMAGE_FORMAT
	AUTOBOOT
	USE_BOOTCOMMAND
	CONFIG_USE_PREBOOT
	CONFIG_SILENT_CONSOLE
	CONFIG_SILENT_U_BOOT_ONLY
	CONFIG_SILENT_CONSOLE_UPDATE_ON_SET
	CONFIG_SILENT_CONSOLE_UNTIL_ENV
	CONFIG_PRE_CONSOLE_BUFFER
	CONFIG_CONSOLE_MUX
	CONFIG_SYS_CONSOLE_IS_IN_ENV
	CONFIG_SYS_CONSOLE_INFO_QUIET
	CONFIG_SYS_STDIO_DEREGISTER
	CONFIG_SYS_DEVICE_NULLDEV
	#CONFIG_ID_EEPROM
	CONFIG_MISC_INIT_R
	CONFIG_HUSH_OLD_PARSER
	CONFIG_SYS_XTRACE
	# commands
	CMD_BTRFS

	CONFIG_CMD_MESON
	CONFIG_DOS_PARTITION
	ISO_PARTITION
	CONFIG_EFI_PARTITION
	CONFIG_PARTITION_UUIDS
	CONFIG_PARTITION_TYPE_GUID
	CONFIG_OF_CONTROL
	CONFIG_OF_LIVE
	CONFIG_OF_UPSTREAM
	CONFIG_OF_SEPARATE
	CONFIG_OF_TAG_MIGRATE
	CONFIG_ENV_IS_IN_FAT
	CONFIG_ENV_IS_IN_EXT4
	CONFIG_SYS_RELOC_GD_ENV_ADDR
	CONFIG_NET_LWIP
	CONFIG_PROT_TCP_SACK_LWIP
	CONFIG_BOOTDEV_ETH
	CONFIG_NET_RANDOM_ETHADDR
	CONFIG_WGET
	# device drivers
	CONFIG_FS_BTRFS

	FS_BTRFS
	CONFIG_FS_EXFAT
	CONFIG_FS_EXT4
	CONFIG_EXT4_WRITE
	CONFIG_FS_FAT
	FAT_WRITE
	CONFIG_FAT_RENAME
	CONFIG_FS_EROFS
	CONFIG_FS_EROFS_ZIP
	CONFIG_FS_EROFS_ZIP_DEFLATE
	CONFIG_DYNAMIC_CRC_TABLE
	LIB_RAND
	CONFIG_AES
	CONFIG_RSA
	CONFIG_OF_LIBFDT_OVERLAY
	CONFIG_SMBIOS
	#OPTEE?
	CONFIG_TOOLS_MKEFICAPSULE
	);
no=(
	ARMV8_PSCI
	LOCALVERSION_AUTO
	BOOTEFI_HELLO_COMPILE
	BOOTEFI_TESTAPP_COMPILE
	DISTRO_DEFAULTS
	FDT_SIMPLEFB
	CONFIG_SYS_CONSOLE_ENV_OVERWRITE
	CONFIG_RESET_PHY_R
	CONFIG_BOARD_RNG_SEED #should be done by kalsr
	CONFIG_ANDROID_AB
	CONFIG_BLOBLIST
	CONFIG_MAC_PARTITION
	CONFIG_TEGRA_PARTITION
	CONFIG_AMIGA_PARTITION
	CONFIG_ENV_IS_NOWHERE
	CONFIG_ENV_IS_IN_EEPROM
	CONFIG_ENV_IS_IN_FLASH
	CONFIG_ENV_IS_IN_MMC
	CONFIG_ENV_IS_IN_NAND
	CONFIG_ENV_IS_IN_NVRAM
	CONFIG_ENV_IS_IN_REMOTE
	CONFIG_ENV_IS_IN_SPI_FLASH
	CONFIG_ENV_IS_IN_MTD
	CONFIG_SYS_REDUNDAND_ENVIRONMENT

	CONFIG_FS_CBFS
	CONFIG_FS_JFFS2
	CONFIG_FS_CRAMFS
	CONFIG_FS_SQUASHFS

	CONFIG_RANDOM_UUID
	CONFIG_PANIC_HANG
	LIB_HW_RAND
	CONFIG_ACPI
	BITREVERSE
	CONFIG_TRACE
	CONFIG_CMD_DHRYSTONE
	CONFIG_SHA_HW_ACCEL
	CONFIG_GENERATE_SMBIOS_TABLE_VERBOSE
	);

declare -A key_value;
key_value["SYS_VENDOR"]="libre-computer"
key_value["LOCALVERSION"]=""
key_value["SYS_MALLOC_LEN"]="0x8000000"
key_value["SYS_BOOTM_LEN"]="0x4000000"
key_value["BOOTDELAY"]="1"
key_value["BOOTCOMMAND"]="bootflow scan -lb"
key_value["PREBOOT"]="usb start"
key_value["CONFIG_PRE_CON_BUF_SZ"]="4096"
key_value["CONFIG_PRE_CON_BUF_ADDR"]="0x08000000" #for now
key_value["CONFIG_EFI_PARTITION_ENTRIES_NUMBERS"]="128"
key_value["CONFIG_MULTI_DTB_FIT_UNCOMPRESS_SZ"]="0x8000"
key_value["CONFIG_ENV_FAT_INTERFACE"]="mmc"
key_value["CONFIG_ENV_FAT_DEVICE_AND_PART"]=":auto"
key_value["CONFIG_ENV_FAT_FILE"]="uboot.env"
key_value["CONFIG_ENV_EXT4_INTERFACE"]="mmc"
key_value["CONFIG_ENV_EXT4_DEVICE_AND_PART"]=":auto"
key_value["CONFIG_ENV_EXT4_FILE"]="uboot.env"
key_value["CONFIG_ENV_SIZE"]="0x2000"
key_value["CONFIG_SYS_MMC_ENV_DEV"]="0"
key_value["CONFIG_SYS_MMC_ENV_PART"]="0" #hardware partition?
key_value[""]=""

if [ -z "$1" ]; then
	echo "$0 config" >&2
	exit 1
fi
file="$1"

for key in ${yes[@]}; do
	echo -n "$key:	"
	if check_yes "$file" $key; then
		echo "OK"
	else
		echo "NOK"
	fi
done
for key in ${no[@]}; do
	echo -n "$key:	"
	if check_no "$file" $key; then
		echo "OK"
	else
		echo "NOK"
	fi
done
for key in ${!key_value[@]}; do
	echo -n "$key:	"
	if check_value "$file" $key "${key_value[$key]}"; then
		echo "OK"
	else
		echo "NOK"
	fi
done
